==== hyperbricks config {!{api_test}} ====
# use user and pass for cases with basic authentication
api_test = <API_RENDER>
api_test {
	endpoint = https://dummyjson.com/auth/login
	method = POST
	body = {"username":"emilys","password":"emilyspass","expiresInMins":30}
	username = emilys
	password = emilyspass
	headers {
		Access-Control-Allow-Credentials = true
		Content-Type = application/json
	}
	inline = <<[
        <h1>{{.Values.someproperty}}</h1>
		<ul id="{{index .Data.id}}">
			<li>{{index .Data.firstName}} {{index .Data.lastName}}</li>
		<ul>
	]>>
    values {
        someproperty = User
    }
	debug = false
	enclose = <div class="userlist">|</div>
}
==== explainer ====
The <API_RENDER> can be used to fetch data from json API like postgREST or another data json source.
This data is parsed in by the template engine. For local files use the <JSON> component

All data is passed into the .Data object, which can be of any type.
The .Value object passes the values defined in the hyperbricks value field which is a map[string]interface{}
````properties
context := struct {
    Data   interface{}
    Values map[string]interface{}
}{
    Data:   data,
    Values: config.Values,
}
````
==== expected json ====
{
    "ConfigType": "<API_RENDER>",
    "ConfigCategory": "",
    "MetaDocDescription": "",
    "HyperBricksKey": "",
    "HyperBricksPath": "",
    "HyperBricksFile": "",
    "ExtraAttributes": null,
    "Enclose": "<div class=\"userlist\">|</div>",
    "Endpoint": "https://dummyjson.com/auth/login",
    "Method": "POST",
    "Headers": {
      "Access-Control-Allow-Credentials": "true",
      "Content-Type": "application/json"
    },
    "Body": "{\"username\":\"emilys\",\"password\":\"emilyspass\",\"expiresInMins\":30}",
    "Template": "",
    "Inline": "\n        <h1>{{.Values.someproperty}}</h1>\n\t\t<ul id=\"{{index .Data.id}}\">\n\t\t\t<li>{{index .Data.firstName}} {{index .Data.lastName}}</li>\n\t\t<ul>\n\t",
    "Values": {
      "someproperty": "User"
    },
    "Username": "emilys",
    "Password": "emilyspass",
    "Status": 0,
    "SetCookie": "",
    "AllowedQueryKeys": null,
    "JwtSecret": "",
    "JwtClaims": null,
    "Debug": false
  }
==== expected output ====
<div class="userlist">
        <h1>User</h1>
	<ul id="1">
		<li>Emily Johnson</li>
	<ul>
</div>