==== hyperbricks config {!{fragment}} ====
fragment = <FRAGMENT>
fragment {
	response {
        hx_trigger = trigger-element-id
    }
}
==== explainer ====
HTMX response header configuration.
==== expected json ====
{
    "ConfigType": "<FRAGMENT>",
    "ConfigCategory": "",
    "HyperBricksKey": "",
    "HyperBricksPath": "",
    "HxTemplateResult": "",
    "HxLocation": "",
    "HxPushedUrl": "",
    "HxRedirect": "",
    "HxRefresh": "",
    "HxReplaceUrl": "",
    "HxReswap": "",
    "HxRetarget": "",
    "HxReselect": "",
    "HxTrigger": "trigger-element-id",
    "HxTriggerafterSettle": "",
    "HxTriggerafterSwap": "",
    "MetaDocDescription": "",
    "HxResponseWriter": null,
    "Title": "",
    "Route": "",
    "Section": "",
    "Items": null,
    "Enclose": "",
    "Template": null,
    "HyperBricksFile": "",
    "IsStatic": false,
    "Static": "",
    "Cache": "",
    "NoCache": false,
    "Index": 0,
    "ContentType": ""
  }
==== expected output ====
==== more details ====
[See HTMX response header documentation](https://htmx.org/reference/#response_headers)

## HTMX Response Headers

This document provides an overview of the HTML headers used in the `HxResponse` struct, their corresponding mapstructure keys, and their descriptions.

| Hyperbricks Key              | HTMX Header                 | Description |
|-------------------------------|-----------------------------|-------------|
| hx_location                   | HX-Location                 | Allows you to do a client-side redirect that does not do a full page reload |
| hx_push_url                   | HX-Push-Url               | Pushes a new URL into the history stack |
| hx_redirect                   | HX-Redirect                 | Can be used to do a client-side redirect to a new location |
| hx_refresh                    | HX-Refresh                  | If set to 'true' the client-side will do a full refresh of the page |
| hx_replace_url                | HX-Replace-URL              | Replaces the current URL in the location bar |
| hx_reswap                     | HX-Reswap                   | Allows you to specify how the response will be swapped |
| hx_retarget                   | HX-Retarget                 | A CSS selector that updates the target of the content update |
| hx_reselect                   | HX-Reselect                 | A CSS selector that allows you to choose which part of the response is used to be swapped in |
| hx_trigger                    | HX-Trigger                  | Allows you to trigger client-side events |
| hx_trigger_after_settle        | HX-Trigger-After-Settle     | Allows you to trigger client-side events after the settle step |
| hx_trigger_after_swap          | HX-Trigger-After-Swap       | Allows you to trigger client-side events after the swap step |